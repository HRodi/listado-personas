{"ast":null,"code":"import _classCallCheck from \"C:\\\\Cursos\\\\Angular\\\\listado-personas\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Cursos\\\\Angular\\\\listado-personas\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Cursos\\\\Angular\\\\listado-personas\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { __awaiter } from \"tslib\";\nimport firebase from 'firebase/compat/app'; //v9\n\nimport 'firebase/compat/auth';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport var LoginService = /*#__PURE__*/(function () {\n  var LoginService = /*#__PURE__*/function () {\n    function LoginService(router) {\n      var _this = this;\n\n      _classCallCheck(this, LoginService);\n\n      this.router = router;\n\n      this.signup = function (user) {\n        return function (dispatch) {\n          return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var auth, firestore, db;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    auth = firebase.auth();\n                    firestore = firebase.firestore();\n                    db = firestore();\n                    auth().createUserWithEmailAndPassword(user.email, user.password).then(function (user) {\n                      console.log(user);\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        };\n      };\n    }\n    /*login(email: string, password: string) {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(\r\n                response => {\r\n                    console.log(response);\r\n                    firebase.auth().currentUser.getIdToken().then(\r\n                        token => {\r\n                            this.token = token;\r\n                            console.log(\"token obtenido:\" + this.token);\r\n                        }\r\n                    )\r\n                    this.router.navigate(['/']);\r\n                }\r\n            )\r\n    }*/\n\n\n    _createClass(LoginService, [{\n      key: \"getIdToken\",\n      value: function getIdToken() {\n        return this.token;\n      }\n    }, {\n      key: \"isAutenticado\",\n      value: function isAutenticado() {\n        return this.token != null;\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        var _this2 = this;\n\n        console.log(\"logout\");\n        firebase.auth().signOut().then(function () {\n          _this2.token = null;\n          console.log(\"dentro de signout\");\n\n          _this2.router.navigate(['login']);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      }\n    }]);\n\n    return LoginService;\n  }();\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.Router));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}